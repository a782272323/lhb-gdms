<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lhb.gdms.consumer.blog.mapper.OtherMapper">

    <resultMap id="sysUserIconMap1" type="lhb.gdms.commons.domain.entity.SysUserIconEntity">
        <id column="sys_user_icon_id" property="sysUserIconId"/>
        <result column="user_icon_url" property="userIconUrl" />
        <result column="user_icon_name" property="userIconName" />
        <result column="key" property="key" />
        <result column="is_default" property="isDefault" />
        <result column="created" property="created" />
        <result column="updated" property="updated" />
    </resultMap>

    <resultMap id="sysLabelMap1" type="lhb.gdms.commons.domain.entity.SysLabelEntity">
        <id column="label_id" property="labelId"/>
        <result column="label_name" property="labelName" />
        <result column="label_icon_url" property="labelIconUrl" />
        <result column="label_icon_key" property="labelIconKey" />
        <result column="created" property="created" />
        <result column="updated" property="updated" />
    </resultMap>



    <!-- 获取全部系统头像信息 -->
    <select id="getIconLists" resultMap="sysUserIconMap1">
        SELECT DISTINCT * FROM sys_user_icon
    </select>

    <!-- 根据id查询系统头像信息 -->
    <select id="getIconInfoById" resultMap="sysUserIconMap1">
        SELECT DISTINCT * FROM sys_user_icon WHERE sys_user_icon_id = ${sysUserIconId}
    </select>

    <!-- 获取全部标签信息 -->
    <select id="getLabelLists" resultMap="sysLabelMap1">
        SELECT DISTINCT * FROM sys_label
    </select>

    <!-- 搜索标签信息 -->
    <select id="queryLabelLists" resultMap="sysLabelMap1">
        SELECT DISTINCT * FROM sys_label
        WHERE label_name LIKE CONCAT(concat('%', #{keyWord}), '%')
    </select>

    <!-- 查询该标签下有多少人关注 -->
    <select id="getLabelFocusCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM sys_label_focus
        WHERE label_id = #{labelId}
    </select>

    <!-- 判断当前登录用户是否关注了该标签 -->
    <select id="findLabelFocusInfoById" resultType="lhb.gdms.commons.domain.entity.SysLabelFocusEntity">
        SELECT * FROM sys_label_focus
        WHERE sys_user_id = #{sysUserId}
        AND label_id = #{labelId}
    </select>

    <!-- 取消标签关注 -->
    <delete id="deleteLabelFocusOne">
        DELETE FROM sys_label_focus
        WHERE label_id = #{labelId}
        AND sys_user_id = #{sysUserId}
    </delete>

    <!-- 添加标签关注 -->
    <insert id="insertLabelFocus">
        INSERT INTO sys_label_focus
            (
             label_id,
             sys_user_id,
             created,
             upadted
            ) VALUES
            (
             #{entity.labelId},
             #{entity.sysUserId},
             #{entity.created},
             #{entity.updated}
            )
    </insert>

    <!-- 根据文章和收藏集id查询 sys_article_collection 数据 -->
    <select id="getArticleCollectionInfoByTwoId" resultType="java.util.HashMap">
        SELECT sys_article_collection_id AS sysArticleCollectionId,
               article_id AS articleId,
               sys_collection_id AS sysCollectionId
        FROM sys_article_collection
        WHERE sys_collection_id = #{sysCollectionId}
        AND article_id = #{articleId}
    </select>

    <!-- 添加文章到收藏集 -->
    <insert id="insertArticleToCollection">
        INSERT INTO sys_article_collection
            (
             article_id,
             sys_collection_id
            )
            VALUES
            (
             #{articleId},
             #{sysCollectionId}
            )
    </insert>

    <!-- 取消文章的收藏 -->
    <delete id="deleteArticleToCollection">
        DELETE FROM sys_article_collection
        WHERE sys_collection_id = #{sysCollectionId}
        AND article_id = #{articleId}
    </delete>

    <!-- 获取评论点赞数量 -->
    <select id="getCommentsPraiseCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM sys_comments_praise
        WHERE sys_article_comments_id = #{sysArticleCommentsId}
    </select>

    <!-- 根据评论表id和用户id查询数据 -->
    <select id="getCommentsPraiseByTwoId" resultType="java.util.HashMap">
        SELECT * FROM sys_comments_praise
        WHERE sys_article_comments_id = #{sysArticleCommentsId}
        AND sys_user_id = #{sysUserId}
    </select>

    <!-- 点赞评论 -->
    <insert id="insertCommentsPraise">
        INSERT INTO sys_comments_praise
            (
             sys_article_comments_id,
             sys_user_id,
             created,
             updated
            )
            VALUES
            (
             #{entity.sysArticleCommentsId},
             #{entity.sysUserId},
             #{entity.created},
             #{entity.updated}
            )
    </insert>

    <!-- 取消评论点赞 -->
    <delete id="deleteCommentsPraise">
        DELETE FROM sys_comments_praise
        WHERE sys_article_comments_id = #{sysArticleCommentsId}
        AND sys_user_id = #{sysUserId}
    </delete>

    <!-- 获取回复点赞数量 -->
    <select id="getReplyPraiseCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM sys_reply_praise
        WHERE sys_comments_reply_id = #{sysCommentsReplyId}
    </select>

    <!-- 根据回复id和用户id查询回复点赞表数据 -->
    <select id="getReplyPraiseInfoByTwoId" resultType="java.util.HashMap">
        SELECT * FROM sys_reply_praise
        WHERE sys_comments_reply_id = #{sysCommentsReplyId}
        AND sys_user_id = #{sysUserId}
    </select>

    <!-- 回复点赞 -->
    <insert id="insertReplyPraise">
        INSERT INTO sys_reply_praise
            (
             sys_comments_reply_id,
             sys_user_id,
             created,
             updated
            ) VALUES
            (
             #{entity.sysCommentsReplyId},
             #{entity.sysUserId},
             #{entity.created},
             #{entity.updated}
            )
    </insert>

    <!-- 取消回复的点赞 -->
    <delete id="deleteReplyPraise">
        DELETE FROM sys_reply_praise
        WHERE sys_comments_reply_id = #{sysCommentsReplyId}
        AND sys_user_id = #{sysUserId}
    </delete>

    <!-- 用户主页点赞列表 -->
    <select id="getHomePraiseLists" resultType="java.util.HashMap">
        (
            SELECT B.article_id AS articleId,
                   B.sys_user_id AS sysUserId,
                   B.sys_article_praise_id AS praiseId,
                   article_title AS title,
                   B.created AS created,
                   'article' AS type
            FROM sys_article A
            LEFT JOIN sys_article_praise B
            ON A.article_id = B.article_id
            WHERE B.sys_user_id = #{userId}
        ) UNION ALL
        (
            SELECT B.article_id AS articleId,
                   C.sys_user_id AS sysUserId,
                   C.sys_comments_praise_id AS praiseId,
                   article_title AS title,
                   C.created AS created,
                   'comment' AS type
            FROM sys_article_comments A
            LEFT JOIN sys_article B
            ON A.article_id = B.article_id
            LEFT JOIN sys_comments_praise C
            ON C.sys_article_comments_id = A.sys_article_comments_id
            WHERE C.sys_user_id = #{userId}
        ) UNION ALL
        (
            SELECT C.article_id AS articleId,
                   D.sys_user_id AS sysUserId,
                   D.sys_reply_praise_id AS praiseId,
                   article_title AS content,
                   D.created AS created,
                   'reply' AS type
            FROM sys_comments_reply A
            LEFT JOIN sys_article_comments B
            ON A.sys_article_comments_id = B.sys_article_comments_id
            LEFT JOIN sys_article C
            ON C.article_id = B.article_id
            LEFT JOIN sys_reply_praise D
            ON D.sys_comments_reply_id = A.sys_comments_reply_id
            WHERE D.sys_user_id = #{userId}
        )
        ORDER BY created DESC
    </select>

    <!-- 消息模块评论相关列表详情 -->
    <select id="getMessageCommentsLists" resultType="java.util.HashMap">
        (
            SELECT A.article_id AS articleId,
                   article_title AS articleTitle,
                   article_comments_content AS content,
                   A.sys_user_id AS sysUserId,
                   sys_user_nickname AS sysUserNickname,
                   sys_user_icon AS sysUserIcon,
                   A.created AS created,
                   'comment' AS type
            FROM sys_article_comments A
            LEFT JOIN sys_article B
            ON A.article_id = B.article_id
            LEFT JOIN sys_user C
            ON A.sys_user_id = C.sys_user_id
            WHERE A.sys_user_id &lt;&gt; ${sysUserId}
            AND B.article_id IN
            (
                SELECT article_id FROM sys_article
                WHERE sys_user_id = #{sysUserId}
            )
            AND C.sys_user_type = 1
            AND C.sys_user_status = 1
        ) UNION ALL
        (
            SELECT C.article_id AS articleId,
                   C.article_title AS articleTitle,
                   comments_reply_content AS content,
                   from_sys_user_id AS sysUserId,
                   sys_user_nickname AS sysUserNickname,
                   sys_user_icon AS sysUserIcon,
                   A.created As created,
                   'reply' AS type
            FROM sys_comments_reply A
            LEFT JOIN sys_article_comments B
            ON A.sys_article_comments_id = B.sys_article_comments_id
            LEFT JOIN sys_article C
            ON B.article_id = C.article_id
            LEFT JOIN sys_user D
            ON D.sys_user_id = A.from_sys_user_id
            WHERE from_sys_user_id &lt;&gt; ${sysUserId}
            AND C.article_id IN
            (
                SELECT article_id FROM sys_article
                WHERE sys_user_id = #{sysUserId}
            )
            AND D.sys_user_type = 1
            AND D.sys_user_status = 1
        ) ORDER BY created DESC
    </select>

    <!-- 消息模块点赞相关列表详情 -->
    <select id="getMessagePraiseLists" resultType="java.util.HashMap">
        (
            SELECT A.article_id AS articleId,
                   article_title AS articleTitle,
                   A.sys_user_id AS sysUserId,
                   sys_user_nickname AS sysUserNickname,
                   sys_user_icon AS sysUserIcon,
                   A.created AS created,
                   'article' AS type
            FROM sys_article_praise A
            LEFT JOIN sys_article B
            ON A.article_id = B.article_id
            LEFT JOIN sys_user C
            ON C.sys_user_id = A.sys_user_id
            WHERE A.sys_user_id &lt;&gt; ${sysUserId}
            AND B.article_id IN
            (
                SELECT article_id FROM sys_article
                WHERE sys_user_id = #{sysUserId}
            )
            AND C.sys_user_type = 1
            AND C.sys_user_status = 1
        ) UNION ALL
        (
            SELECT C.article_id AS articleId,
                   article_title AS articleTitle,
                   A.sys_user_id AS sysUserId,
                   sys_user_nickname AS sysUserNickname,
                   sys_user_icon AS sysUserIcon,
                   A.created AS created,
                   'comment' AS type
            FROM sys_comments_praise A
            LEFT JOIN sys_article_comments B
            ON A.sys_article_comments_id = B.sys_article_comments_id
            LEFT JOIN sys_article C
            ON B.article_id = C.article_id
            LEFT JOIN sys_user D
            ON A.sys_user_id = D.sys_user_id
            WHERE A.sys_user_id &lt;&gt; ${sysUserId}
            AND C.article_id IN
            (
                SELECT article_id FROM sys_article
                WHERE sys_user_id = #{sysUserId}
            )
            AND D.sys_user_type = 1
            AND D.sys_user_status = 1
        ) UNION ALL
        (
            SELECT E.article_id AS articleId,
                   article_title AS articleTitle,
                   A.sys_user_id AS sysUserId,
                   sys_user_nickname AS sysUserNickname,
                   sys_user_icon AS sysUserIcon,
                   A.created AS created,
                   'reply' AS type
            FROM sys_reply_praise A
            LEFT JOIN sys_user B
            ON A.sys_user_id = B.sys_user_id
            LEFT JOIN sys_comments_reply C
            ON A.sys_comments_reply_id = C.sys_comments_reply_id
            LEFT JOIN sys_article_comments D
            ON C.sys_article_comments_id = D.sys_article_comments_id
            LEFT JOIN sys_article E
            ON D.article_id = E.article_id
            WHERE A.sys_user_id &lt;&gt; ${sysUserId}
            AND E.article_id IN
            (
                SELECT article_id FROM sys_article
                WHERE sys_user_id = #{sysUserId}
            )
            AND B.sys_user_type = 1
            AND B.sys_user_status = 1
        ) ORDER BY created DESC
    </select>
</mapper>